name: Deploy to docker hub

on:
   push:
     branches:
      - master
     tags:
       - '*.*.*'

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Login to docker hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Frontend
        if: success()
        run: cd frontend && docker build -t jzlotek/bcfrontend:${IMAGE_TAG} . -f ./Dockerfile

      - name: Push to docker registry
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push jzlotek/bcfrontend:${IMAGE_TAG}

      - name: Deploy to Kube
        if: success()
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: cd frontend && helm repo add jzlotek jzlotek.github.io/helm-charts && helm repo update && helm upgrade --install bcfrontend jzlotek/microservice --values helm/values.yaml --set image.tag=${IMAGE_TAG}
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Login to docker hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend
        if: success()
        run: cd backend && docker build -t jzlotek/bcbackend:${IMAGE_TAG} . -f ./Dockerfile
      - name: Push to docker registry
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push jzlotek/bcbackend:${IMAGE_TAG}

      - name: Deploy to Kube
        if: success()
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: cd backend && helm repo add jzlotek jzlotek.github.io/helm-charts && helm repo update && helm upgrade --install bcbackend jzlotek/microservice --values helm/values.yaml --set image.tag=${IMAGE_TAG}
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
